<?php

namespace Tests\Unit;

use App\Lib\CollectionCreator;
use App\Lib\GreatCircleDistance;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class CollectionCreatorTest extends TestCase {

    private $fileName;

    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $data = '{"latitude": "51.8856167", "affiliate_id": 2, "name": "Mohamed Bradshaw", "longitude": "-10.4240951"}
{"latitude": "51.92893", "affiliate_id": 1, "name": "Lance Keith", "longitude": "-10.27699"}';
        $this->fileName = time() . rand() . '_test_data.txt';
        Storage::disk('local')->put($this->fileName, $data);
    }

    public function test_collection_from_file_count() {
        $greatCircle = new GreatCircleDistance();
        $result = CollectionCreator::createCollectionFromFile($greatCircle, storage_path() . '/app/' . $this->fileName);
        $this->assertEquals(2, $result->count());
    }

    public function test_collection_from_file_id_has_correct_name() {
        $greatCircle = new GreatCircleDistance();
        $result = CollectionCreator::createCollectionFromFile($greatCircle, storage_path() . '/app/' . $this->fileName);

        $this->assertEquals('Lance Keith', $result->where('affiliate_id', 1)->first()->name);
        $this->assertEquals('Mohamed Bradshaw', $result->where('affiliate_id', 2)->first()->name);
    }

    public function tearDown(): void {
        parent::tearDown(); // TODO: Change the autogenerated stub
        Storage::disk('local')->delete($this->fileName);
    }
}
